{{- if .Values.shardCount }}
{{- $replicas := .Values.shardCount | int }}
{{- range $i, $e := until $replicas }}
apiVersion: v1
data:
  JINA_LOG_LEVEL: INFO
  pythonunbuffered: '1'
  worker_class: uvicorn.workers.UvicornH11Worker
kind: ConfigMap
metadata:
  name: indexer-{{ $i }}-configmap
  namespace: {{ template "pqlite-helm.namespace" $ }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: indexer-{{ $i }}
  name: indexer-{{ $i }}
  namespace: {{ template "pqlite-helm.namespace" $ }}
spec:
  ports:
  - name: port-expose
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: port-in
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app: indexer-{{ $i }}
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: indexer-{{ $i }}
  namespace: {{ template "pqlite-helm.namespace" $ }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: indexer-{{ $i }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: indexer-{{ $i }}
        jina_pod_name: indexer
        ns: {{ template "pqlite-helm.namespace" $ }}
        pea_type: WORKER
        shard_id: {{ $i | squote }}
    spec:
      containers:
      - args:
        - executor
        - --name
        - indexer-{{ $i }}
        - --workspace
        - /Users/fengwang/Jina/workspace/pqlite/examples/k8s_example
        - --k8s-namespace
        - {{ template "pqlite-helm.namespace" $ }}
        - --uses
        - config.yml
        - --port-in
        - '8081'
        - --num-part
        - '1'
        - --upload-files
        - --shard-id
        - {{ $i | squote }}
        - --noblock-on-start
        - --shards
        - {{ $replicas | squote }}
        - --uses-metas
        - '{"pea_id": {{ $i }}}'
        - --uses-with
        - '{"dim": {{ $.Values.dimension }}}'
        - --native
        command:
        - jina
        env:
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: JINA_POD_NAME
          value: indexer
        envFrom:
        - configMapRef:
            name: indexer-{{ $i }}-configmap
        image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        name: executor
        ports:
        - containerPort: 8080
        - containerPort: 8081
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 8081
        volumeMounts:
          - name: datadir
            mountPath: "{{ $.Values.persistence.mountPath }}"
      volumes:
        - name: datadir
          {{- if and $.Values.persistence.enabled $.Values.persistence.existingClaim}}
          persistentVolumeClaim:
            {{- with $.Values.persistence.existingClaim }}
            claimName: {{ tpl . $ }}
            {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- if lt $i (sub $replicas 1) }}
---
{{- end }}

{{- end }}
{{- end }}
