apiVersion: v1
data:
  JINA_LOG_LEVEL: INFO
  pythonunbuffered: '1'
  worker_class: uvicorn.workers.UvicornH11Worker
kind: ConfigMap
metadata:
  name: gateway-configmap
  namespace: {{ template "pqlite-helm.namespace" . }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gateway
  name: gateway
  namespace: {{ template "pqlite-helm.namespace" . }}
spec:
  ports:
  - name: port-expose
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: port-in
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app: gateway
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: {{ template "pqlite-helm.namespace" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gateway
        jina_pod_name: gateway
        ns: {{ template "pqlite-helm.namespace" . }}
        pea_type: GATEWAY
        shard_id: ''
    spec:
      containers:
      - args:
        - gateway
        - --workspace-id
        - 34181a2a7b64422abd6f09d06a2489da
        - --k8s-namespace
        - {{ template "pqlite-helm.namespace" . }}
        - --polling
        - ANY
        - --port-in
        - '8081'
        - --expose-endpoints
        - '{}'
        - --protocol
        - HTTP
        - --port-expose
        - '8080'
        - --graph-description
        - '{"indexer": ["end-gateway"], "start-gateway": ["indexer"]}'
        - --pea-role
        - GATEWAY
        - --noblock-on-start
        command:
        - jina
        env:
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: JINA_POD_NAME
          value: gateway
        envFrom:
        - configMapRef:
            name: gateway-configmap
        image: jinaai/jina:master-py38-standard
        imagePullPolicy: IfNotPresent
        name: executor
        ports:
        - containerPort: 8080
        - containerPort: 8081
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 8080
